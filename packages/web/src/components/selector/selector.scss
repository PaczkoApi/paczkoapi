@function variable($key, $default: null) {
    @if $default != null {
        @return var(--paczkoapi-#{$key}, var(--paczkoapi-#{$default}));
    }

    @return var(--paczkoapi-#{$key});
}

@mixin variable($key, $value) {
    --paczkoapi-#{$key}: #{$value};
}

:host {
    // Rodzaj czcionki
    --paczkoapi-font-family: inherit;
    // Rozmiar czcionki bazowy
    --paczkoapi-font-size-base: 1rem;
    // Rozmiar czcionki mniejszy
    --paczkoapi-font-size-sm: 0.8rem;
    // Grubość czcionki normalna
    --paczkoapi-font-weight-normal: 400;
    // Grubość czcionki średnia
    --paczkoapi-font-weight-medium: 500;
    // Grubość czcionki pogrubiona
    --paczkoapi-font-weight-bold: 600;

    // Odstęp bardzo mały
    --paczkoapi-spacing-xs: 0.25rem;
    // Odstęp mały
    --paczkoapi-spacing-sm: 0.75rem;
    // Odstęp średni
    --paczkoapi-spacing-md: 1rem;
    // Odstęp duży
    --paczkoapi-spacing-lg: 1.5rem;
    // Odstęp między elementami
    --paczkoapi-point-gap: 0;
    // Odstęp wewnętrzny punktu odbioru
    --paczkoapi-point-padding: var(--paczkoapi-spacing-md);

    // Kolor tekstu
    --paczkoapi-text-color: #1a1a1a;
    // Kolor tekstu po najechaniu
    --paczkoapi-text-color-hover: var(--paczkoapi-text-color);
    // Kolor tekstu po wybraniu
    --paczkoapi-text-color-selected: var(--paczkoapi-text-color);
    // Kolor tekstu drugorzędny (adres)
    --paczkoapi-text-color-secondary: #666;
    // Kolor tekstu drugorzędny (adres) po najechaniu
    --paczkoapi-text-color-secondary-hover: var(--paczkoapi-text-color-secondary);
    // Kolor tekstu drugorzędny (adres) po wybraniu
    --paczkoapi-text-color-secondary-selected: var(--paczkoapi-text-color-secondary);

    // Kolor tła punktu odbioru
    --paczkoapi-background-color: transparent;
    // Kolor tła punktu odbioru po najechaniu
    --paczkoapi-background-color-hover: #f9f9f9;
    // Kolor tła punktu odbioru po wybraniu
    --paczkoapi-background-color-selected: transparent;

    // Promień krawędzi punktu odbioru
    --paczkoapi-border-radius: 0.5rem;
    // Kolor krawędzi punktu odbioru
    --paczkoapi-border-color: transparent;
    // Kolor krawędzi punktu odbioru po najechaniu
    --paczkoapi-border-color-hover: var(--paczkoapi-border-color);
    // Kolor krawędzi punktu odbioru po wybraniu
    --paczkoapi-border-color-selected: var(--paczkoapi-border-color);

    // Rozmiar elementu radio
    --paczkoapi-radio-size: 1.25rem;
    // Kolor kropki w radio po wybraniu
    --paczkoapi-radio-dot-color: #1a1a1a;
    // Grubość krawędzi elementu radio
    --paczkoapi-radio-border-size: 2px;
    // Kolor krawędzi elementu radio
    --paczkoapi-radio-border-color: #e5e5e5;
    // Kolor krawędzi elementu radio po wybraniu
    --paczkoapi-radio-border-color-selected: #1a1a1a;
    // Kolor krawędzi elementu radio po najechaniu
    --paczkoapi-radio-border-color-hover: var(--paczkoapi-radio-border-color);
    // Margines elementu radio
    --paczkoapi-radio-margin: 0 var(--paczkoapi-spacing-sm) 0 0;
    // Rozmiar kropki w radio po wybraniu
    --paczkoapi-radio-dot-size: 0.75rem;

    // Czas przejścia animacji
    --paczkoapi-transition-duration: 150ms;
    // Funkcja przejścia animacji
    --paczkoapi-transition-timing: ease-out;
}

.theme {
    &_border {
        --paczkoapi-point-gap: var(--paczkoapi-spacing-sm);
        --paczkoapi-background-color-selected: var(--paczkoapi-background-color-hover);
        --paczkoapi-border-color: #f3f3f3;
        --paczkoapi-border-color-hover: #cbd5e1;
        --paczkoapi-border-color-selected: #a0a0a0;
    }
}

fieldset {
    border: none;
    padding: 0;
    margin: 0;
    max-width: 600px;
    display: flex;
    flex-direction: column;
    gap: variable(point-gap);
    color: variable(text-color);
}

label {
    display: flex;
    align-items: flex-start;
    padding: variable(point-padding);
    cursor: pointer;
    position: relative;
    color: variable(text-color);
    border: 1px solid variable(border-color);
    border-radius: variable(border-radius);
    background-color: variable(background-color);
    transition: all variable(transition-duration) variable(transition-timing);

    &:hover {
        --paczkoapi-background-color: var(--paczkoapi-background-color-hover);
        --paczkoapi-border-color: var(--paczkoapi-border-color-hover);
        --paczkoapi-text-color: var(--paczkoapi-text-color-hover);
        --paczkoapi-text-color-secondary: var(--paczkoapi-text-color-secondary-hover);
        --paczkoapi-radio-border-color: var(--paczkoapi-radio-border-color-hover);
    }

    &.selected {
        --paczkoapi-background-color: var(--paczkoapi-background-color-selected);
        --paczkoapi-border-color: var(--paczkoapi-border-color-selected);
        --paczkoapi-text-color: var(--paczkoapi-text-color-selected);
        --paczkoapi-text-color-secondary: var(--paczkoapi-text-color-secondary-selected);
        --paczkoapi-radio-border-color: var(--paczkoapi-radio-border-color-selected);
    }
}

.radio {
    flex-shrink: 0;
    width: variable(radio-size);
    height: variable(radio-size);
    border: variable(radio-border-size) solid variable(radio-border-color);
    border-radius: 50%;
    margin: variable(radio-margin);
    position: relative;
    transition: border-color variable(transition-duration) variable(transition-timing);

    &::after {
        content: '';
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%) scale(0.6);
        opacity: 0;
        width: variable(radio-dot-size);
        height: variable(radio-dot-size);
        border-radius: 50%;
        background-color: variable(radio-dot-color);
        transition:
            transform variable(transition-duration) variable(transition-timing),
            opacity variable(transition-duration) variable(transition-timing);

        .selected & {
            transform: translate(-50%, -50%) scale(1);
            opacity: 1;
        }
    }
}

.content {
    flex: 1;
    display: flex;
    justify-content: space-between;
}

.info {
    display: flex;
    flex-direction: column;
    gap: variable(spacing-xs);
}

.name {
    font-size: variable(font-size-base);
    font-weight: variable(font-weight-medium);
    color: variable(text-color);
}

.address {
    font-size: variable(font-size-sm);
    color: variable(text-color-secondary);
}

.price-provider {
    display: flex;
    flex-direction: column;
    align-items: flex-end;
    gap: variable(spacing-xs);
    margin-left: variable(spacing-md);
}

.price {
    font-size: variable(font-size-base);
    font-weight: variable(font-weight-medium);
    color: variable(text-color);
    margin-bottom: auto;
}

.provider {
    width: 60px;
    height: 30px;
    object-fit: contain;
    margin-top: auto;
    margin-bottom: auto;

    &_large {
        width: 80px;
        height: 40px;
    }
}

input {
    position: absolute;
    opacity: 0;
    width: 0;
    height: 0;
}

.change {
    font-size: variable(font-size-sm);
    color: variable(text-color);
    text-decoration: underline;
    cursor: pointer;
    border: none;
    background: transparent;
    padding: 1rem;
    margin: -1rem;
    align-self: flex-start;
}

/* HTML: <div class="loader"></div> */
.loader {
    width: 2.5rem;
    aspect-ratio: 4;
    --_g: no-repeat radial-gradient(circle closest-side, currentColor 90%, transparent);
    background:
        var(--_g) 0% 50%,
        var(--_g) 50% 50%,
        var(--_g) 100% 50%;
    background-size: calc(100% / 3) 100%;
    animation: loader 1s infinite ease-out;
    margin: 0 auto;
}

@keyframes loader {
    33% {
        background-size:
            calc(100% / 3) 0%,
            calc(100% / 3) 100%,
            calc(100% / 3) 100%;
    }
    50% {
        background-size:
            calc(100% / 3) 100%,
            calc(100% / 3) 0%,
            calc(100% / 3) 100%;
    }
    66% {
        background-size:
            calc(100% / 3) 100%,
            calc(100% / 3) 100%,
            calc(100% / 3) 0%;
    }
}
