@use 'sass:map';

@function variable($key, $default: null) {
    @if $default != null {
        @return var(--paczkoapi-#{$key}, var(--paczkoapi-#{$default}));
    }

    @return var(--paczkoapi-#{$key});
}

@mixin variable($key, $value) {
    --paczkoapi-#{$key}: #{$value};
}

/* Dark Theme */
[data-theme='dark'] {
    --pickup-color-text: #f1f5f9;
    --pickup-color-text-secondary: #94a3b8;
    --pickup-border-color: #334155;
    --pickup-border-color-hover: #475569;
    --pickup-border-color-selected: #60a5fa;
    --pickup-background-color: #1e293b;
    --pickup-background-color-hover: #334155;
    --pickup-background-color-selected: #1e3a8a;
    --pickup-radio-dot-color-selected: #60a5fa;
    --pickup-radio-dot-color-selected-border: #475569;
}

:host {
    font-family: variable(font-family);
    background-color: variable(background-color);
    color: variable(color-text);

    // Typography
    @include variable('font-family', inherit);
    @include variable('font-size-base', 1rem);
    @include variable('font-size-sm', 0.8rem);
    @include variable('font-weight-normal', 400);
    @include variable('font-weight-medium', 500);
    @include variable('font-weight-bold', 600);

    // Spacing
    @include variable('spacing-xs', 0.25rem);
    @include variable('spacing-sm', 0.5rem);
    @include variable('spacing-md', 1rem);
    @include variable('spacing-lg', 1.5rem);
    @include variable('spacing-gap', 0);

    // Colors
    @include variable('color-text', #1a1a1a);
    @include variable('color-text-secondary', #666);
    @include variable('color-primary', #1a1a1a);

    // Background
    @include variable('background-color', transparent);
    @include variable('background-color-hover', #fcfcfc);
    @include variable('background-color-selected', transparent);

    // Border
    @include variable('border-radius', 0.5rem);
    @include variable('border-radius-sm', 0.25rem);
    @include variable('border-color', transparent);
    @include variable('border-color-hover', transparent);
    @include variable('border-color-selected', transparent);

    // Radio
    @include variable('radio-size', 1.25rem);
    @include variable('radio-border-size', 2px);
    @include variable('radio-border-color', #e5e5e5);
    @include variable('radio-border-color-selected', variable(color-primary));
    @include variable('radio-dot-size', 0.75rem);
    @include variable('radio-dot-color', #cbd5e1);
    @include variable('radio-dot-color-selected', variable(color-primary));

    // Transitions
    @include variable('transition-duration', 150ms);
    @include variable('transition-timing', ease-out);
}

.theme {
    &_border {
        @include variable('spacing-gap', variable(spacing-sm));
        @include variable('background-color-selected', variable(background-color-hover));
        @include variable('border-color', #f3f3f3);
        @include variable('border-color-hover', #cbd5e1);
        @include variable('border-color-selected', #a0a0a0);
    }
}

fieldset {
    border: none;
    padding: 0;
    margin: 0;
    max-width: 600px;
    display: flex;
    flex-direction: column;
    gap: variable(spacing-gap);
}

label {
    display: flex;
    align-items: flex-start;
    padding: variable(spacing-md);
    cursor: pointer;
    position: relative;
    border: 1px solid variable(border-color);
    border-radius: variable(border-radius);
    transition:
        background-color variable(transition-duration) variable(transition-timing),
        border-color variable(transition-duration) variable(transition-timing);

    &.selected {
        border-color: variable(border-color-selected);
        background-color: variable(background-color-selected);
    }

    &:hover,
    &:hover.selected {
        background-color: variable(background-color-hover);
    }
}

.radio {
    flex-shrink: 0;
    width: variable(radio-size);
    height: variable(radio-size);
    border: variable(radio-border-size) solid variable(radio-border-color);
    border-radius: 50%;
    margin-right: variable(spacing-md);
    position: relative;
    transition: border-color variable(transition-duration) variable(transition-timing);

    &::after {
        content: '';
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%) scale(0);
        width: variable(radio-dot-size);
        height: variable(radio-dot-size);
        border-radius: 50%;
        background-color: variable(radio-dot-color-selected);
        transition: transform variable(transition-duration) variable(transition-timing);

        .selected & {
            transform: translate(-50%, -50%) scale(1);
        }
    }

    .selected & {
        border-color: variable(radio-dot-color-selected);
    }
}

.content {
    flex: 1;
    display: flex;
    justify-content: space-between;
}

.info {
    display: flex;
    flex-direction: column;
    gap: variable(spacing-xs);
}

.name {
    font-size: variable(font-size-base);
    font-weight: variable(font-weight-medium);
    color: variable(color-text);
}

.address {
    font-size: variable(font-size-sm);
    color: variable(color-text-secondary);
}

.price-provider {
    display: flex;
    flex-direction: column;
    align-items: flex-end;
    gap: variable(spacing-xs);
    margin-left: variable(spacing-md);
}

.price {
    font-size: variable(font-size-base);
    font-weight: variable(font-weight-medium);
    color: variable(color-text);
    margin-bottom: auto;
}

.provider {
    width: 60px;
    height: 30px;
    object-fit: contain;
    margin-top: auto;
    margin-bottom: auto;

    &_large {
        width: 80px;
        height: 40px;
    }
}

input {
    position: absolute;
    opacity: 0;
    width: 0;
    height: 0;
}
