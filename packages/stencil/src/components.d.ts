/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { PickupPoint, Provider } from "@paczkoapi/client";
export { PickupPoint, Provider } from "@paczkoapi/client";
export namespace Components {
    interface MyComponent {
        /**
          * The first name
         */
        "first": string;
        /**
          * The last name
         */
        "last": string;
        /**
          * The middle name
         */
        "middle": string;
    }
    interface PaczkoapiSelector {
        /**
          * The city to search for pickup points
         */
        "addressCity": string;
        /**
          * The postal code to search for pickup points
         */
        "addressPostalCode": string;
        /**
          * The street to search for pickup points
         */
        "addressStreet": string;
        /**
          * The limit of pickup points to fetch
         */
        "limit": number;
        /**
          * The price of DHL pickup points
         */
        "priceDhl": number;
        /**
          * The price of InPost pickup points
         */
        "priceInpost": number;
        /**
          * The providers to search for pickup points
         */
        "providers": Provider[] | Provider;
        /**
          * The currently selected pickup point ID
         */
        "selectedPoint": string | null;
        /**
          * The currently selected pickup point type
         */
        "selectedProvider": Provider | null;
        /**
          * The theme of the selector
         */
        "theme": 'border' | 'default';
    }
}
export interface PaczkoapiSelectorCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLPaczkoapiSelectorElement;
}
declare global {
    interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {
    }
    var HTMLMyComponentElement: {
        prototype: HTMLMyComponentElement;
        new (): HTMLMyComponentElement;
    };
    interface HTMLPaczkoapiSelectorElementEventMap {
        "pointSelected": PickupPoint;
    }
    interface HTMLPaczkoapiSelectorElement extends Components.PaczkoapiSelector, HTMLStencilElement {
        addEventListener<K extends keyof HTMLPaczkoapiSelectorElementEventMap>(type: K, listener: (this: HTMLPaczkoapiSelectorElement, ev: PaczkoapiSelectorCustomEvent<HTMLPaczkoapiSelectorElementEventMap[K]>) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
        removeEventListener<K extends keyof HTMLPaczkoapiSelectorElementEventMap>(type: K, listener: (this: HTMLPaczkoapiSelectorElement, ev: PaczkoapiSelectorCustomEvent<HTMLPaczkoapiSelectorElementEventMap[K]>) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
    }
    var HTMLPaczkoapiSelectorElement: {
        prototype: HTMLPaczkoapiSelectorElement;
        new (): HTMLPaczkoapiSelectorElement;
    };
    interface HTMLElementTagNameMap {
        "my-component": HTMLMyComponentElement;
        "paczkoapi-selector": HTMLPaczkoapiSelectorElement;
    }
}
declare namespace LocalJSX {
    interface MyComponent {
        /**
          * The first name
         */
        "first"?: string;
        /**
          * The last name
         */
        "last"?: string;
        /**
          * The middle name
         */
        "middle"?: string;
    }
    interface PaczkoapiSelector {
        /**
          * The city to search for pickup points
         */
        "addressCity"?: string;
        /**
          * The postal code to search for pickup points
         */
        "addressPostalCode"?: string;
        /**
          * The street to search for pickup points
         */
        "addressStreet"?: string;
        /**
          * The limit of pickup points to fetch
         */
        "limit"?: number;
        /**
          * Event emitted when a pickup point is selected
         */
        "onPointSelected"?: (event: PaczkoapiSelectorCustomEvent<PickupPoint>) => void;
        /**
          * The price of DHL pickup points
         */
        "priceDhl"?: number;
        /**
          * The price of InPost pickup points
         */
        "priceInpost"?: number;
        /**
          * The providers to search for pickup points
         */
        "providers"?: Provider[] | Provider;
        /**
          * The currently selected pickup point ID
         */
        "selectedPoint"?: string | null;
        /**
          * The currently selected pickup point type
         */
        "selectedProvider"?: Provider | null;
        /**
          * The theme of the selector
         */
        "theme"?: 'border' | 'default';
    }
    interface IntrinsicElements {
        "my-component": MyComponent;
        "paczkoapi-selector": PaczkoapiSelector;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "my-component": LocalJSX.MyComponent & JSXBase.HTMLAttributes<HTMLMyComponentElement>;
            "paczkoapi-selector": LocalJSX.PaczkoapiSelector & JSXBase.HTMLAttributes<HTMLPaczkoapiSelectorElement>;
        }
    }
}
